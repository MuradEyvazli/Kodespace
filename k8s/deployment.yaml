apiVersion: apps/v1
kind: Deployment
metadata:
  name: kodespace-app
  labels:
    app: kodespace
    component: app
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kodespace
      component: app
  template:
    metadata:
      labels:
        app: kodespace
        component: app
    spec:
      containers:
      - name: app
        image: kodespace:latest
        ports:
        - containerPort: 3000
        env:
        - name: NODE_ENV
          value: "production"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: kodespace-secrets
              key: mongodb-uri
        - name: NEXTAUTH_SECRET
          valueFrom:
            secretKeyRef:
              name: kodespace-secrets
              key: nextauth-secret
        - name: NEXTAUTH_URL
          valueFrom:
            configMapKeyRef:
              name: kodespace-config
              key: app-url
        - name: GITHUB_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: kodespace-secrets
              key: github-client-id
        - name: GITHUB_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: kodespace-secrets
              key: github-client-secret
        - name: GOOGLE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: kodespace-secrets
              key: google-client-id
        - name: GOOGLE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: kodespace-secrets
              key: google-client-secret
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: kodespace-secrets
              key: redis-url
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: nextjs-cache
          mountPath: /app/.next/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: nextjs-cache
        emptyDir: {}
      restartPolicy: Always
      securityContext:
        fsGroup: 1001

---
apiVersion: v1
kind: Service
metadata:
  name: kodespace-app-service
  labels:
    app: kodespace
    component: app
spec:
  selector:
    app: kodespace
    component: app
  ports:
  - name: http
    port: 80
    targetPort: 3000
    protocol: TCP
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kodespace-ingress
  labels:
    app: kodespace
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - your-domain.com
    secretName: kodespace-tls
  rules:
  - host: your-domain.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kodespace-app-service
            port:
              number: 80